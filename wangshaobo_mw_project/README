在传统卫星研制过程中，在星载设备投产前，总体需要进行分系统间的接口协调，统一分配访问地址；星载设备交付验收后，其访问地址已经固化。例如，采用1553B总线进行通信的星载设备，其RT地址在验收交付时已经按照某卫星的总体要求固化，无法修改。由于星载设备种类繁多，1553B总线的RT端数目有限（RT地址范围为0..31），难以预先分配给全部所有可能的星载设备。根据卫星的具体应用需求，协调星载设备间数据接口的传统卫星研制模式难以满足快速组装卫星的研究要求。

若更改设备与星载计算机接口的对应关系，基于传统的星载计算机上设备访问的方法，上层应用模块访问所接入设备，不仅要考虑到设备所对应地址的变化，也要考虑到接口装配关系的变化。因此，若想要在不更改上层应用模块代码的情况下能够继续访问设备，必须要增加一层介于上层应用和底层链路层的中间层来虚拟化设备访问地址并且通用化设备访问的驱动。这里，我们采用了一种折中的方案，使用外部配置文件的方法来配置各个星载设备的接口装配关系，并对1553总线BC控制程序和RT接口控制添加辅助模块，使得物理数据传输端口映射到虚拟的数据端口；另外通用化设备访问驱动方法见设计文档2。

虚拟化设备访问地址部分实现了一种基于配置文件虚拟化星载设备访问的方法，即对于应用层来说，只需要使用已经定义好的设备逻辑标识符就可以访问设备；对于1553总线控制器（BC-RT模式）来说，其要转发数据通过访问一组虚拟端口（每个端口对应一个物理意义上的RT地址）即可；对于RT来说，通过访问一组虚拟端口（每个端口对应一个物理意义上的RT子地址）就可以对相应子地址下的设备返回的数据进行打包。需要注意的是，我们使用数据包来作为1553总线控制器和RT接口之间的数据传输单位，1553总线控制器传输数据/指令至RT，那么数据包包含所有需要送往RT接口下所挂载设备的数据/指令；RT返回数据至1553总线控制器，那么数据包包含所有RT下挂载设备的数据，打包方式可以在配置文件里配置。

整个系统设计思路包含两个部分：配置文件（协议）部分和具体实施部分（主程序）。配置文件部分用于定义星载计算机上设备的装配关系（全局配置），以及自定义一组对相应设备的操作描述（具体操作），所属全局配置部分主要用于提供给虚拟化设备访问地址部分。

data.txt文件用于记录测试数据,file文件夹与其相关
dev.xml为1553b的xml配置文件
dev_new.xml为can的xml的配置文件
load.sh * 使用qemu启动程序
log 日志
env-init.sh 脚本用于启动vcan,开机使用一次就可以
