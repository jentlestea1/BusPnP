  
//
// Copyright 2004 P&P Software GmbH - All Rights Reserved
//
// DC_SampleControlBlock_4.h
//
// This file was automatically generated by an XSL program

#ifndef DC_SampleControlBlock_4_H
#define DC_SampleControlBlock_4_H

#include "../GeneralInclude/ForwardDeclarations.h"
#include "../GeneralInclude/BasicTypes.h"
#include "../Data/DataPoolControlBlock.h"
#include "../Qom/object.h"

/**
 * Sample control block number 4. This control block has one input 
 * (the speed of reaction wheel 4), one output (the torque of 
 * reaction wheel 4), and one parameter (the gain K4).
 * <p>
 * This is a stub class. It provides dummy implementations for some of the virtual
 * methods of its superclass. 
 * This class was automatically generated by an XSL program that processes the
 * XML-based <i>target application model</i>. The XSL program  
 * searches the application model for all "ControlBlock" elements
 * which have a "Custom" subelement that indicates that a custom control block
 * class must be created. For each such element a class header file is created.
 * @todo Modify the generator meta-component generateRecoveryAction to generate the code
 * that sets the class identifier and to treat the default attributes in the custom recovery action description.
 * @author Automatically Generated Class
 * @version 1.0
 */
 #define TYPE_DC_SampleControlBlock_4 "dc_samplecontrolblock_4"
     

void DC_SampleControlBlock_4_register(void);


/////////////////////////////////////////////////////////////////////////////////
//
//                              class and struct
//
/////////////////////////////////////////////////////////////////////////////////

struct DC_SampleControlBlock_4 {
    DataPoolControlBlock parent;
};


struct DC_SampleControlBlock_4Class {
    DataPoolControlBlockClass parent_class;
/**
 * This is a stub method that must be completed by the application developer.
 * This stub provides a default implementation that returns without doing anything.
 */
    void (*propagateState)(void *obj);
/**
 * This is a stub method that must be completed by the application developer.
 * This stub provides a default implementation that returns without doing anything. 
 */
    void (*updateOutput)(void *obj);
/**
 * This is a stub method that must be completed by the application developer.
 * This stub provides a default implementation that returns without doing anything.
 */
    void (*reset)(void *obj);
};


#define DC_SAMPLECONTROLBLOCK_4_GET_CLASS(obj) \
         OBJECT_GET_CLASS(DC_SampleControlBlock_4Class, obj, TYPE_DC_SAMPLECONTROLBLOCK_4)


#define DC_SAMPLECONTROLBLOCK_4_CLASS(klass) \
         OBJECT_CLASS_CHECK(DC_SampleControlBlock_4Class, klass, TYPE_DC_SAMPLECONTROLBLOCK_4)


#define DC_SAMPLECONTROLBLOCK_4(obj) \
         OBJECT_CHECK(DC_SampleControlBlock_4, obj, TYPE_DC_SAMPLECONTROLBLOCK_4)


DC_SampleControlBlock_4* DC_SampleControlBlock_4_new(void);

#endif
